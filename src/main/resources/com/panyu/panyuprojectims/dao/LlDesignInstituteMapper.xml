<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.panyu.panyuprojectims.dao.LlDesignInstituteDao">
    <!-- LlDesignInstitute的resultMap,column是给数据库列起的别名,它对应property类的属性-->
    <resultMap id="result_LlDesignInstitute_Map" type="com.panyu.panyuprojectims.entity.LlDesignInstitute">
        <id column="DESIGN_INSTITUTE_ID" property="designInstituteId" />
        <result column="COMPANY_NAME" property="companyName" />
        <result column="DESIGN_PERSONNEL" property="designPersonnel" />
    </resultMap>

    <!-- 数据库中表名为:LL_DESIGN_INSTITUTE的列名,as前是数据库的列明,as后是列的别名用于映射成实体类中的属性,需要注意的是别名必须与resultMap中的column别名一致 -->
    <sql id="LL_DESIGN_INSTITUTE_Column">
        LL_DESIGN_INSTITUTE.DESIGN_INSTITUTE_ID as DESIGN_INSTITUTE_ID
        ,LL_DESIGN_INSTITUTE.COMPANY_NAME as COMPANY_NAME
        ,LL_DESIGN_INSTITUTE.DESIGN_PERSONNEL as DESIGN_PERSONNEL
    </sql>
    <!--根据线路设计单位表ID删除选中项-->
    <delete id="deleteLlDesignInstitute">
        delete from LL_DESIGN_INSTITUTE
        where DESIGN_INSTITUTE_ID = #{designInstituteId,jdbcType=VARCHAR}
    </delete>
    <!--添加-->
    <insert id="insertLlDesignInstitute">
        insert into LL_DESIGN_INSTITUTE values (
            #{designInstituteId,jdbcType=VARCHAR},
            #{companyName,jdbcType=VARCHAR},
            #{designPersonnel,jdbcType=VARCHAR}
        )
    </insert>
</mapper>